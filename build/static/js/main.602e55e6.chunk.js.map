{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions.js","services/contacts-api.js","redux/operations.js","redux/reducer.js","redux/store.js","redux/selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","filterContact","createAction","fetchContacts","a","axios","get","data","addContact","name","number","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","message","contact","phonebookReducer","createSlice","initialState","items","filter","error","reducers","actions","state","payload","extraReducers","fulfilled","rejected","reducer","store","configureStore","getItems","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleNameChange","e","target","value","className","s","form","onSubmit","preventDefault","find","duplicateValidator","operations","alert","htmlFor","type","onChange","pattern","title","required","Filter","ContactList","useEffect","length","map","item","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.602e55e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__fa09Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1wNEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3vUdv\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContact = createAction('contacts/Filter');\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL =\r\n  'https://61bef9d1b25c3a00173f4c17.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n\r\n  return data;\r\n}\r\n\r\nexport async function addContact(name, number) {\r\n  const { data } = await axios.post(`/contacts`, {\r\n    name,\r\n    number,\r\n  });\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import * as contactsAPI from '../services/contacts-api';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/FetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/AddContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await contactsAPI.addContact(name, number);\r\n      return contact;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/DeleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contact = await contactsAPI.deleteContact(id);\r\n      return contact.id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport { fetchContacts, deleteContact, addContact } from './operations';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: { items: [], filter: '', error: null },\r\n  reducers: {\r\n    [actions.filterContact]: (state, { payload }) => {\r\n      state.filter = payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, { payload }) => {\r\n      state.items = payload;\r\n    },\r\n    [addContact.fulfilled]: (state, { payload }) => {\r\n      state.items = [...state.items, payload];\r\n    },\r\n\r\n    [deleteContact.fulfilled]: (state, { payload }) => {\r\n      state.items = state.items.filter(({ id }) => id !== payload);\r\n    },\r\n    [fetchContacts.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n    [addContact.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n    [deleteContact.rejected]: (state, { payload }) => {\r\n      state.error = payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst phonebookReducer = contactsSlice.reducer;\r\n\r\nexport default phonebookReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport phonebookReducer from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport { getItems } from 'redux/selector';\r\nimport * as operations from '../../redux/operations';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const duplicateValidator = name =>\r\n      items.find(contact => contact.name === name);\r\n\r\n    duplicateValidator(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(operations.addContact({ name, number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"\">Name</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"\">Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleNameChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/selector';\r\nimport * as actions from '../../redux/actions';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={e =>\r\n            dispatch(actions.filterContact(e.target.value))\r\n          }\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport * as operations from '../../redux/operations';\r\nimport { getFilteredContacts } from 'redux/selector';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const items = useSelector(getFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {items.length > 0 && (\r\n        <ul>\r\n          {items.map(({ name, number, id }) => (\r\n            <li className={s.item} key={id}>\r\n              <p>\r\n                {name} : {number}\r\n              </p>\r\n              <button\r\n                onClick={() => {\r\n                  dispatch(operations.deleteContact(id));\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from 'components/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}